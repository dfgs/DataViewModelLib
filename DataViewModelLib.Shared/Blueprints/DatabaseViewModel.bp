{{- dtoAttribute = class.attributes | find "DTOAttribute"  }}
{{- if !dtoAttribute}}
#warning no DTO attribute was set on unit test class {{class.name}}
{{-ret}}
{{-end}}
{{- databaseName=(dtoAttribute.parameters | find "Name").value }}

// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using DataModelLib;
{{-for usingAttribute in class.attributes | with_name "UsingAttribute" }}
using {{(usingAttribute.parameters | find "Namespace").value}};
{{-end}}

namespace {{class.namespace}}
{
	public partial class {{class.name}}
	{

		{{- for class in project.classes | with_attribute "TableAttribute" }}
		private Dictionary<{{class.name}}Model,{{class.name}}ViewModel> {{class.name}}Dictionary;
		{{- end }}

		private {{databaseName}}Model dataSource;

		#region generated properties
		{{- for class in project.classes | with_attribute "TableAttribute" }}
		public {{class.name}}ViewModelCollection {{class.name}}ViewModelCollection
		{
			get;
			private set;
		}
		{{- end }}
		#endregion

		public {{class.name}}({{databaseName}}Model DataSource)
		{
			this.dataSource=DataSource;
	
			{{- for class in project.classes | with_attribute "TableAttribute" }}
			{{class.name}}Dictionary =  new Dictionary<Models.{{class.name}}Model,{{class.name}}ViewModel> ();
			{{- end }}

			{{- for class in project.classes | with_attribute "TableAttribute" }}
			{{class.name}}ViewModelCollection =  new {{class.name}}ViewModelCollection(this, dataSource);
			{{- end }}
		}

		{{- for class in project.classes | with_attribute "TableAttribute" }}
		public {{class.name}}ViewModel Create{{class.name}}ViewModel(Models.{{class.name}}Model Item)
		{
			{{class.name}}ViewModel viewModel;
			
			if (Item==null) throw new ArgumentNullException(nameof(Item));

			if (!{{class.name}}Dictionary.TryGetValue(Item,out viewModel))
			{
				viewModel=new {{class.name}}ViewModel(this, dataSource, Item);
				{{class.name}}Dictionary.Add(Item,viewModel);
			}
			
			return viewModel;
		}
		{{- end }}


	}
}