using Microsoft.CodeAnalysis.CSharp.Syntax;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace DataViewModelLib.Schema
{
	public class Database : SchemaObject
	{


		public string Namespace
		{
			get;
			private set;
		}
		public string DatabaseName
		{
			get;
			private set;
		}

		public List<Table> Tables
		{
			get;
			private set;
		}

		public Database(string Namespace,string DatabaseName) : base()
		{
			Tables = new List<Table>();
			this.Namespace = Namespace;this.DatabaseName = DatabaseName;
		}

				

		public string GenerateDatabaseViewModelClass()
		{
			string source =
			$$"""
			// <auto-generated/>
			using System;
			using System.Collections.Generic;
			using System.Collections.Specialized;
			using System.Linq;
			using DataModelGenerator;
			{{string.Join("\r\n", Tables.Select(item => $"using {item.Namespace};").Distinct()) }}

			namespace {{Namespace}}
			{
				public partial class {{DatabaseName}}ViewModel
				{
					private {{DatabaseName}}Model dataSource;

			{{this.GenerateDatabaseViewModelConstructor().Indent(2)}}
			
				}
			}
			""";

			return source;
		}
		//{{string.Join("\r\n", Tables.Select(item=>item.GenerateDatabaseModelMethods())).Indent(2)}


		public string GenerateDatabaseViewModelConstructor()
		{
			string source =
			$$"""
			public {{DatabaseName}}ViewModel({{DatabaseName}}Model DataSource)
			{
				this.dataSource=DataSource;
			}
			""";

			return source;
		}


	}
}
