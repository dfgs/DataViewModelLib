using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Text;

namespace DataViewModelLib.SourceGenerator
{
	public class DatabaseViewModelSourceGenerator// : SourceGenerator<Database>
	{
		/*
		public override string GenerateSource(Database Database)
		{
			string source =
			$$"""
			// <auto-generated/>
			using System;
			using System.Collections.Generic;
			using System.Collections.Specialized;
			using System.Linq;
			using DataModelLib.Common;
			{{Database.Tables.Select(item => $"using {item.Namespace}.Models;").Distinct().Join()}}

			namespace {{Database.Namespace}}.ViewModels
			{
				public partial class {{Database.DatabaseName}}ViewModel
				{
			{{Database.Tables.Select(item => $"private Dictionary<{item.TableName}Model,{item.TableName}ViewModel> {item.TableName}Dictionary;").Join().Indent(2)}}
			
					private {{Database.DatabaseName}}Model dataSource;

			{{Database.Tables.Select(item=> GenerateProperties(Database,item)).Join().Indent(2)}}

					public {{Database.DatabaseName}}ViewModel({{Database.DatabaseName}}Model DataSource)
					{
						this.dataSource=DataSource;
			{{Database.Tables.Select(item => $"{item.TableName}Dictionary =  new Dictionary<{item.TableName}Model,{item.TableName}ViewModel>() ;").Join().Indent(3)}}
			{{Database.Tables.Select(item => $"{item.TableName}ViewModelCollection = new {item.TableName}ViewModelCollection(this, dataSource);").Join().Indent(3)}}
					}

			{{Database.Tables.Select(item => GenerateMethods(item)).Join().Indent(2)}}
									
				}
			}
			""";

			return source;
		}

		

		private string GenerateMethods(Table Table)
		{
			string source;

			source = $$"""
			public {{Table.TableName}}ViewModel Create{{Table.TableName}}ViewModel({{Table.TableName}}Model Item)
			{
				{{Table.TableName}}ViewModel viewModel;
			
				if (Item==null) throw new ArgumentNullException(nameof(Item));

				if (!{{Table.TableName}}Dictionary.TryGetValue(Item,out viewModel))
				{
					viewModel=new {{Table.TableName}}ViewModel(this, dataSource, Item);
					{{Table.TableName}}Dictionary.Add(Item,viewModel);
				}
			
				return viewModel;
			}
			""";

			return source;
		}


*/
	}


}
